{"version":3,"sources":["components/CardContainer.js","components/HeaderScore.js","App.js","index.js"],"names":["CardContainer","props","cards","setCards","useState","animals","useEffect","newCards","index","length","randomIndex","Math","floor","random","shuffle","score","highScore","className","map","card","onClick","handleGameLogic","bind","name","src","image","alt","uniqid","HeaderScore","App","setHighScore","setScore","cardsArr","setCardsArray","includes","prevArray","handleCard","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNA2CeA,MAvCQC,IACrB,MAAOC,EAAOC,GAAYC,mBAASC,GAkBnC,OANAC,qBAAU,KACR,IAAIC,EAAW,IAAIL,IAXrB,SAAiBK,GACf,IAAK,IAAIC,EAAQD,EAASE,OAAS,EAAGD,EAAQ,EAAGA,IAAS,CACxD,IAAIE,EAAcC,KAAKC,MAAMD,KAAKE,SAAWL,IAC5CD,EAASG,GAAcH,EAASC,IAAU,CACzCD,EAASC,GACTD,EAASG,KAObI,CAAQP,GACRJ,EAASI,KACR,CAACN,EAAMc,MAAOd,EAAMe,YAGrB,qBAAKC,UAAU,QAAf,SACGf,EAAMgB,KAAKC,GAER,sBAEEF,UAAU,OACVG,QAASnB,EAAMoB,gBAAgBC,UAAK,EAAMH,EAAKI,MAHjD,UAKE,qBAAKC,IAAKL,EAAKM,MAAOC,IAAKP,EAAKI,OAChC,6BACE,iCAASJ,EAAKI,WANXI,YCRFC,MAlBM3B,GAEjB,mCACE,gCACE,6CACA,gIAKF,gCACE,yCAAYA,EAAMc,MAAlB,WACA,8CAAiBd,EAAMe,mBCmChBa,MA5CH,KACV,MAAOb,EAAWc,GAAgB1B,mBAAS,IACpCW,EAAOgB,GAAY3B,mBAAS,IAC5B4B,EAAUC,GAAiB7B,mBAAS,IA6B3C,OACE,gCACE,cAAC,EAAD,CAAaW,MAAOA,EAAOC,UAAWA,IACtC,cAAC,EAAD,CACEK,gBAdN,SAAyBF,GAClBa,EAASE,SAASf,IAbvBW,EAAaf,GAQbgB,EAAS,GACTE,EAAc,OANhB,SAAoBd,GAClBc,GAAeE,GAAc,IAAIA,EAAWhB,KAU1CiB,CAAWjB,GAlBbY,EAAShB,EAAQ,KA+BbA,MAAOA,EACPC,UAAWA,QCvCnBqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.4ec4d169.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport uniqid from \"uniqid\";\nimport animals from \"./AnimalList.json\";\n\nconst CardContainer = (props) => {\n  const [cards, setCards] = useState(animals);\n\n  function shuffle(newCards) {\n    for (let index = newCards.length - 1; index > 0; index--) {\n      let randomIndex = Math.floor(Math.random() * index);\n      [newCards[randomIndex], newCards[index]] = [\n        newCards[index],\n        newCards[randomIndex],\n      ];\n    }\n  }\n\n  useEffect(() => {\n    var newCards = [...cards];\n    shuffle(newCards);\n    setCards(newCards);\n  }, [props.score, props.highScore]);\n\n  return (\n    <div className=\"board\">\n      {cards.map((card) => {\n        return (\n          <div\n            key={uniqid()}\n            className=\"card\"\n            onClick={props.handleGameLogic.bind(this, card.name)}\n          >\n            <img src={card.image} alt={card.name}/>\n            <h3>\n              <strong>{card.name}</strong>\n            </h3>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CardContainer;\n","import React from \"react\";\n\nconst HeaderScore = (props) => {\n  return (\n    <header>\n      <div>\n        <h1>Memory Game</h1>\n        <p>\n          Get points by clicking on an image but don't click on any more than\n          once! Can you get to 12?\n        </p>\n      </div>\n      <div>\n        <h2>Score: {props.score} / 12</h2>\n        <h2>High Score: {props.highScore}</h2>\n      </div>\n    </header>\n  );\n};\n\nexport default HeaderScore;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport CardContainer from \"./components/CardContainer\";\nimport HeaderScore from \"./components/HeaderScore.js\";\n\nconst App = () => {\n  const [highScore, setHighScore] = useState(0);\n  const [score, setScore] = useState(0);\n  const [cardsArr, setCardsArray] = useState([]);\n\n  function handleIncrement() {\n    setScore(score + 1);\n  }\n\n  function handleHighScore() {\n    setHighScore(score);\n  }\n\n  function handleCard(card) {\n    setCardsArray((prevArray) => [...prevArray, card]);\n  }\n\n  function resetScore() {\n    setScore(0);\n    setCardsArray([]);\n  }\n\n  function handleGameLogic(card) {\n    if (!cardsArr.includes(card)) {\n      handleCard(card);\n      handleIncrement();\n    } else {\n      handleHighScore();\n      resetScore();\n    }\n  }\n\n  return (\n    <div>\n      <HeaderScore score={score} highScore={highScore} />\n      <CardContainer\n        handleGameLogic={handleGameLogic}\n        score={score}\n        highScore={highScore}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}