{"version":3,"sources":["components/CardContainer.js","components/HeaderScore.js","App.js","index.js"],"names":["CardContainer","props","useState","animals","cards","setCards","useEffect","newCards","index","length","randomIndex","Math","floor","random","shuffle","score","highScore","className","map","card","onClick","handleGameLogic","bind","name","src","image","uniqid","HeaderScore","App","setHighScore","setScore","cardsArr","setCardsArray","includes","prevArray","handleCard","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOA2CeA,EAvCO,SAACC,GAAW,IAAD,EACLC,mBAASC,GADJ,mBACxBC,EADwB,KACjBC,EADiB,KAmB/B,OANAC,qBAAU,WACR,IAAIC,EAAQ,YAAOH,IAXrB,SAAiBG,GACf,IAAK,IAAIC,EAAQD,EAASE,OAAS,EAAGD,EAAQ,EAAGA,IAAS,CACxD,IAAIE,EAAcC,KAAKC,MAAMD,KAAKE,SAAWL,GADW,EAEb,CACzCD,EAASC,GACTD,EAASG,IAFVH,EAASG,GAF8C,KAEhCH,EAASC,GAFuB,MAW1DM,CAAQP,GACRF,EAASE,KACR,CAACN,EAAMc,MAAOd,EAAMe,YAGrB,qBAAKC,UAAU,QAAf,SACGb,EAAMc,KAAI,SAACC,GACV,OACE,sBAEEF,UAAU,OACVG,QAASnB,EAAMoB,gBAAgBC,K,UAAWH,EAAKI,MAHjD,UAKE,qBAAKC,IAAKL,EAAKM,QACf,6BACE,iCAASN,EAAKI,WANXG,aCdFC,EAZK,SAAC1B,GACnB,OACE,mCACE,6CACA,gCACE,yCAAYA,EAAMc,MAAlB,WACA,8CAAiBd,EAAMe,oBCyChBY,EA5CH,WAAO,IAAD,EACkB1B,mBAAS,GAD3B,mBACTc,EADS,KACEa,EADF,OAEU3B,mBAAS,GAFnB,mBAETa,EAFS,KAEFe,EAFE,OAGkB5B,mBAAS,IAH3B,mBAGT6B,EAHS,KAGCC,EAHD,KAgChB,OACE,gCACE,cAAC,EAAD,CAAajB,MAAOA,EAAOC,UAAWA,IACtC,cAAC,EAAD,CACEK,gBAdN,SAAyBF,GAClBY,EAASE,SAASd,IAbvBU,EAAad,GAQbe,EAAS,GACTE,EAAc,OANhB,SAAoBb,GAClBa,GAAc,SAACE,GAAD,4BAAmBA,GAAnB,CAA8Bf,OAU1CgB,CAAWhB,GAlBbW,EAASf,EAAQ,KA+BbA,MAAOA,EACPC,UAAWA,QCvCnBoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.38edca04.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport uniqid from \"uniqid\";\nimport animals from \"./AnimalList.json\";\n\nconst CardContainer = (props) => {\n  const [cards, setCards] = useState(animals);\n\n  function shuffle(newCards) {\n    for (let index = newCards.length - 1; index > 0; index--) {\n      let randomIndex = Math.floor(Math.random() * index);\n      [newCards[randomIndex], newCards[index]] = [\n        newCards[index],\n        newCards[randomIndex],\n      ];\n    }\n  }\n\n  useEffect(() => {\n    var newCards = [...cards];\n    shuffle(newCards);\n    setCards(newCards);\n  }, [props.score, props.highScore]);\n\n  return (\n    <div className=\"board\">\n      {cards.map((card) => {\n        return (\n          <div\n            key={uniqid()}\n            className=\"card\"\n            onClick={props.handleGameLogic.bind(this, card.name)}\n          >\n            <img src={card.image}></img>\n            <h3>\n              <strong>{card.name}</strong>\n            </h3>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CardContainer;\n","import React from \"react\";\n\nconst HeaderScore = (props) => {\n  return (\n    <header>\n      <h1>Memory Game</h1>\n      <div>\n        <h2>Score: {props.score} / 12</h2>\n        <h2>High Score: {props.highScore}</h2>\n      </div>\n    </header>\n  );\n};\n\nexport default HeaderScore;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport CardContainer from \"./components/CardContainer\";\nimport HeaderScore from \"./components/HeaderScore.js\";\n\nconst App = () => {\n  const [highScore, setHighScore] = useState(0);\n  const [score, setScore] = useState(0);\n  const [cardsArr, setCardsArray] = useState([]);\n\n  function handleIncrement() {\n    setScore(score + 1);\n  }\n\n  function handleHighScore() {\n    setHighScore(score);\n  }\n\n  function handleCard(card) {\n    setCardsArray((prevArray) => [...prevArray, card]);\n  }\n\n  function resetScore() {\n    setScore(0);\n    setCardsArray([]);\n  }\n\n  function handleGameLogic(card) {\n    if (!cardsArr.includes(card)) {\n      handleCard(card);\n      handleIncrement();\n    } else {\n      handleHighScore();\n      resetScore();\n    }\n  }\n\n  return (\n    <div>\n      <HeaderScore score={score} highScore={highScore} />\n      <CardContainer\n        handleGameLogic={handleGameLogic}\n        score={score}\n        highScore={highScore}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}