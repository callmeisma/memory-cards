{"version":3,"sources":["components/CardContainer.js","components/HeaderScore.js","App.js","index.js"],"names":["CardContainer","props","useState","animals","cards","setCards","useEffect","newCards","index","length","randomIndex","Math","floor","random","shuffle","score","highScore","className","map","card","onClick","handleGameLogic","bind","name","alt","src","image","uniqid","HeaderScore","App","setHighScore","setScore","cardsArr","setCardsArray","includes","prevArray","handleCard","href","title","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAkCeA,EA9BO,SAACC,GAAW,IAAD,EACHC,mBAASC,GADN,mBACtBC,EADsB,KACfC,EADe,KAgB7B,OANAC,qBAAU,WACN,IAAIC,EAAQ,YAAOH,IARvB,SAAiBG,GACb,IAAK,IAAIC,EAAQD,EAASE,OAAS,EAAGD,EAAQ,EAAGA,IAAS,CACtD,IAAIE,EAAcC,KAAKC,MAAMD,KAAKE,SAAWL,GADS,EAEX,CAACD,EAASC,GAAQD,EAASG,IAArEH,EAASG,GAF4C,KAE9BH,EAASC,GAFqB,MAQ1DM,CAAQP,GACRF,EAASE,KACV,CAAEN,EAAMc,MAAOd,EAAMe,YAGpB,qBAAKC,UAAU,QAAf,SACKb,EAAMc,KAAI,SAACC,GACR,OACI,sBAAoBF,UAAU,OAAOG,QAASnB,EAAMoB,gBAAgBC,K,UAAWH,EAAKI,MAApF,UACI,qBAAKC,IAAKL,EAAKI,KAAME,IAAKN,EAAKO,QAC/B,6BAAI,iCAASP,EAAKI,WAFZI,aCVfC,EAZK,SAAC3B,GACjB,OACI,mCACI,6CACA,gCACI,yCAAYA,EAAMc,SAClB,8CAAiBd,EAAMe,oBCsCxBa,EAzCH,WAAO,IAAD,EACkB3B,mBAAS,GAD3B,mBACTc,EADS,KACEc,EADF,OAEU5B,mBAAS,GAFnB,mBAETa,EAFS,KAEFgB,EAFE,OAGkB7B,mBAAS,IAH3B,mBAGT8B,EAHS,KAGCC,EAHD,KAgChB,OACE,gCACE,cAAC,EAAD,CAAalB,MAAOA,EAAOC,UAAWA,IACtC,cAAC,EAAD,CAAeK,gBAbnB,SAAyBF,GAClBa,EAASE,SAASf,IAbvBW,EAAaf,GAQbgB,EAAS,GACTE,EAAc,OANhB,SAAoBd,GAClBc,GAAc,SAACE,GAAD,4BAAmBA,GAAnB,CAA8BhB,OAU1CiB,CAAWjB,GAlBbY,EAAShB,EAAQ,KA6BkCA,MAAOA,EAAOC,UAAWA,IAC1E,iDAAmB,mBAAGqB,KAAK,2CAA2CC,MAAM,UAAzD,qBAAnB,SAAuG,mBAAGD,KAAK,4BAA4BC,MAAM,WAA1C,qCCrC7GC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.9e62d2f0.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport uniqid from \"uniqid\";\nimport animals from \"./AnimalList.json\";\n\nconst CardContainer = (props) => {\n    const [cards, setCards] = useState(animals)\n\n    function shuffle(newCards) {\n        for (let index = newCards.length - 1; index > 0; index--) {\n            let randomIndex = Math.floor(Math.random() * index);\n            [newCards[randomIndex], newCards[index]] = [newCards[index], newCards[randomIndex]];\n        }\n    };\n\n    useEffect(() => {\n        var newCards = [...cards];\n        shuffle(newCards);\n        setCards(newCards);\n    }, [ props.score, props.highScore]);\n\n    return (\n        <div className=\"board\">\n            {cards.map((card) => {\n                return (\n                    <div key={uniqid()} className=\"card\" onClick={props.handleGameLogic.bind(this, card.name)}>\n                        <img alt={card.name} src={card.image}></img>\n                        <h3><strong>{card.name}</strong></h3>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default CardContainer\n","import React from 'react';\n\nconst HeaderScore = (props) => {\n    return (\n        <header>\n            <h1>Memory Game</h1>\n            <div>\n                <h2>Score: {props.score}</h2>\n                <h2>High Score: {props.highScore}</h2>\n            </div>\n        </header>\n    )\n}\n\nexport default HeaderScore\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport CardContainer from \"./components/CardContainer\";\nimport HeaderScore from \"./components/HeaderScore.js\"; \n\nconst App = () => {\n  const [highScore, setHighScore] = useState(0);\n  const [score, setScore] = useState(0);\n  const [cardsArr, setCardsArray] = useState([]);\n\n  function handleIncrement() {\n    setScore(score + 1);\n  };\n\n  function handleHighScore() {\n    setHighScore(score);\n  };\n\n  function handleCard(card) {\n    setCardsArray((prevArray) => [...prevArray, card]);\n  };\n\n  function resetScore() {\n    setScore(0);\n    setCardsArray([]);\n  };\n\n  function handleGameLogic(card) {\n    if (!cardsArr.includes(card)) {\n      handleCard(card);\n      handleIncrement();\n    } else {\n      handleHighScore();\n      resetScore();\n    }\n  }\n\n  return (\n    <div>\n      <HeaderScore score={score} highScore={highScore} />\n      <CardContainer handleGameLogic={handleGameLogic} score={score} highScore={highScore}/>\n      <div>Icons made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}